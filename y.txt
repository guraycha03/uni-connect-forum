'use client';

import React, { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { Button } from '@/components/ui/button';
import {
    BarChart,
    Bar,
    XAxis,
    YAxis,
    CartesianGrid,
    Tooltip,
    Legend,
    ResponsiveContainer,
} from 'recharts';
import { cn } from '@/lib/utils'; // Corrected import path

// Dummy data for demonstration.  Labels are now USERS, POSTS, COMMENTS
const initialDashboardData = {
    totalUsers: 150,
    totalPosts: 100,
    totalComments: 200,
};

// Animation variants
const cardVariants = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0, transition: { duration: 0.5, ease: 'easeInOut' } },
};

const chartVariants = {
    hidden: { opacity: 0, x: -20 },
    visible: { opacity: 1, x: 0, transition: { duration: 0.5, ease: 'easeInOut', delay: 0.3 } },
};

const HomePage = () => {
    // State for dashboard data
    const [dashboardData, setDashboardData] = useState(initialDashboardData);
    const [loading, setLoading] = useState(true);

    // Simulate data fetching and updates
    useEffect(() => {
        const timer = setTimeout(() => {
            // Simulate initial data load
            setDashboardData({
                totalUsers: 200,
                totalPosts: 150,
                totalComments: 250,
            });
            setLoading(false);
        }, 1500); // Simulate 1.5 second delay for initial load

        // Simulate automatic updates every 5 seconds
        const updateInterval = setInterval(() => {
            setDashboardData(prevData => ({
                totalUsers: prevData.totalUsers + Math.floor(Math.random() * 20), // Simulate change
                totalPosts: prevData.totalPosts + Math.floor(Math.random() * 15),   // Simulate change
                totalComments: prevData.totalComments + Math.floor(Math.random() * 25), // Simulate change
            }));
        }, 5000); // Update every 5 seconds

        return () => {
            clearTimeout(timer);       // Clear initial load timer
            clearInterval(updateInterval); // Clear update interval
        };
    }, []);

    // Data for the bar chart.  Uses the new labels.
    const chartData = [
        { name: 'USERS', value: dashboardData.totalUsers },
        { name: 'POSTS', value: dashboardData.totalPosts },
        { name: 'COMMENTS', value: dashboardData.totalComments },
    ];

    // Chart color
    const chartColor = '#880808'; // Deep Maroon

    return (
        <div className="min-h-screen bg-gray-100 dark:bg-gray-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
            <div className="w-full max-w-4xl space-y-8">
                <div className="text-center">
                    <h1 className="text-4xl sm:text-5xl font-extrabold text-gray-900 dark:text-white">
                        Welcome to the Dashboard
                    </h1>
                    <p className="mt-3 text-base text-gray-500 dark:text-gray-400 sm:mx-auto sm:mt-5 sm:max-w-xl sm:text-lg">
                        Manage and visualize your project data with ease.
                    </p>
                </div>

                <div className="space-y-6">
                    <motion.div
                        variants={cardVariants}
                        initial="hidden"
                        animate="visible"
                        className="grid grid-cols-1 md:grid-cols-2 gap-6"
                    >
                        <div className="bg-white dark:bg-gray-800 shadow-lg hover:shadow-xl transition-shadow duration-300 rounded-lg">
                            <div className="p-4">
                                <h2 className="text-lg font-semibold text-gray-900 dark:text-white">
                                    Total Users
                                </h2>
                            </div>
                            <div className="p-4">
                                {loading ? (
                                    <p className="text-gray-500 dark:text-gray-400">Loading...</p>
                                ) : (
                                    <p className={cn(
                                        "text-2xl font-bold",
                                        "text-foreground" // Apply the text color
                                    )}>
                                        {dashboardData.totalUsers}
                                    </p>
                                )}
                            </div>
                        </div>

                        <div className="bg-white dark:bg-gray-800 shadow-lg hover:shadow-xl transition-shadow duration-300 rounded-lg">
                            <div className="p-4">
                                <h2 className="text-lg font-semibold text-gray-900 dark:text-white">
                                    Total Posts
                                </h2>
                            </div>
                            <div className="p-4">
                                {loading ? (
                                    <p className="text-gray-500 dark:text-gray-400">Loading...</p>
                                ) : (
                                    <p className={cn(
                                        "text-2xl font-bold",
                                        "text-foreground" // Apply the text color
                                    )}>
                                        {dashboardData.totalPosts}
                                    </p>
                                )}
                            </div>
                        </div>

                        <div className="bg-white dark:bg-gray-800 shadow-lg hover:shadow-xl transition-shadow duration-300 rounded-lg">
                            <div className="p-4">
                                <h2 className="text-lg font-semibold text-gray-900 dark:text-white">
                                    Total Comments
                                </h2>
                            </div>
                            <div className="p-4">
                                {loading ? (
                                    <p className="text-gray-500 dark:text-gray-400">Loading...</p>
                                ) : (
                                    <p className={cn(
                                        "text-2xl font-bold",
                                        "text-foreground" // Apply the text color
                                    )}>
                                        {dashboardData.totalComments}
                                    </p>
                                )}
                            </div>
                        </div>
                    </motion.div>

                    <motion.div
                        variants={chartVariants}
                        initial="hidden"
                        animate="visible"
                        className="bg-white dark:bg-gray-800 shadow-lg rounded-lg p-6"
                    >
                        <h2 className="text-2xl font-semibold text-gray-900 dark:text-white mb-6">
                            Dashboard Overview
                        </h2>
                        {loading ? (
                            <div className="text-center py-8">
                                <p className="text-gray-500 dark:text-gray-400">Loading chart data...</p>
                            </div>
                        ) : (
                            <div className="p-6">
                                <ResponsiveContainer width="100%" height={300}>
                                    <BarChart
                                        data={chartData}
                                        margin={{
                                            top: 5,
                                            right: 30,
                                            left: 20,
                                            bottom: 5,
                                        }}
                                    >
                                        <CartesianGrid strokeDasharray="3 3" stroke="rgba(200, 200, 200, 0.2)" />
                                        <XAxis
                                            dataKey="name"
                                            tick={{ fill: '#6b7280' }}
                                            tickLine={false}
                                        />
                                        <YAxis
                                            tick={{ fill: '#6b7280' }}
                                            tickLine={false}
                                        />
                                        <Tooltip
                                            contentStyle={{ backgroundColor: '#fff', border: '1px solid #ddd', borderRadius: '8px', color: '#333' }}
                                            labelStyle={{ fontWeight: 'bold', color: '#333' }}
                                            itemStyle={{ color: '#333' }}
                                        />
                                        <Legend wrapperStyle={{ color: '#6b7280' }} />
                                        <Bar dataKey="value" fill={chartColor} />
                                    </BarChart>
                                </ResponsiveContainer>
                            </div>
                        )}
                    </motion.div>
                </div>
            </div>
        </div>
    );
};

export default HomePage;
